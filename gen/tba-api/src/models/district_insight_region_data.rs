/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.10.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DistrictInsightRegionData {
    /// Map of year to number of active teams
    #[serde(rename = "yearly_active_team_count")]
    pub yearly_active_team_count: std::collections::HashMap<String, i32>,
    /// Map of year to number of events
    #[serde(rename = "yearly_event_count")]
    pub yearly_event_count: std::collections::HashMap<String, i32>,
    /// Map of year to list of team keys gained
    #[serde(rename = "yearly_gained_teams")]
    pub yearly_gained_teams: std::collections::HashMap<String, Vec<String>>,
    /// Map of year to list of team keys lost
    #[serde(rename = "yearly_lost_teams")]
    pub yearly_lost_teams: std::collections::HashMap<String, Vec<String>>,
}

impl DistrictInsightRegionData {
    pub fn new(yearly_active_team_count: std::collections::HashMap<String, i32>, yearly_event_count: std::collections::HashMap<String, i32>, yearly_gained_teams: std::collections::HashMap<String, Vec<String>>, yearly_lost_teams: std::collections::HashMap<String, Vec<String>>) -> DistrictInsightRegionData {
        DistrictInsightRegionData {
            yearly_active_team_count,
            yearly_event_count,
            yearly_gained_teams,
            yearly_lost_teams,
        }
    }
}

