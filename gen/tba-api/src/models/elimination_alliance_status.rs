/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.10.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EliminationAllianceStatus {
    #[serde(rename = "playoff_average", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub playoff_average: Option<Option<f64>>,
    #[serde(rename = "playoff_type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub playoff_type: Option<Option<f64>>,
    #[serde(rename = "level", skip_serializing_if = "Option::is_none")]
    pub level: Option<String>,
    #[serde(rename = "record", skip_serializing_if = "Option::is_none")]
    pub record: Option<Box<models::WltRecord>>,
    #[serde(rename = "current_level_record", skip_serializing_if = "Option::is_none")]
    pub current_level_record: Option<Box<models::WltRecord>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
}

impl EliminationAllianceStatus {
    pub fn new() -> EliminationAllianceStatus {
        EliminationAllianceStatus {
            playoff_average: None,
            playoff_type: None,
            level: None,
            record: None,
            current_level_record: None,
            status: None,
        }
    }
}

